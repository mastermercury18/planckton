{"version":3,"file":"vendors-node_modules_jupyterlab_application_lib_mimerenderers_js-node_modules_jupyterlab_appl-fdcfe8.15112ffc98a305e64f64.js","mappings":"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","sources":["webpack://@jupyter-notebook/lab-extension/../../node_modules/@jupyterlab/application/src/layoutrestorer.ts","webpack://@jupyter-notebook/lab-extension/../../node_modules/@jupyterlab/application/src/mimerenderers.ts","webpack://@jupyter-notebook/lab-extension/../../node_modules/@jupyterlab/application/src/status.ts"],"sourcesContent":["/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n\nimport { WidgetTracker } from '@jupyterlab/apputils';\nimport { IDataConnector, IRestorer } from '@jupyterlab/statedb';\nimport { CommandRegistry } from '@lumino/commands';\nimport {\n  JSONExt,\n  JSONObject,\n  PartialJSONObject,\n  PromiseDelegate,\n  ReadonlyPartialJSONObject,\n  ReadonlyPartialJSONValue,\n  Token\n} from '@lumino/coreutils';\nimport { AttachedProperty } from '@lumino/properties';\nimport { DockPanel, Widget } from '@lumino/widgets';\nimport { ILabShell } from './shell';\n\n/**\n * The layout restorer token.\n */\nexport const ILayoutRestorer = new Token<ILayoutRestorer>(\n  '@jupyterlab/application:ILayoutRestorer',\n  'A service providing application layout restoration functionality. Use this to have your activities restored across page loads.'\n);\n\n/**\n * A static class that restores the widgets of the application when it reloads.\n */\nexport interface ILayoutRestorer extends IRestorer {\n  /**\n   * A promise resolved when the layout restorer is ready to receive signals.\n   */\n  restored: Promise<void>;\n\n  /**\n   * Add a widget to be tracked by the layout restorer.\n   */\n  add(widget: Widget, name: string): void;\n\n  /**\n   * Restore the widgets of a particular widget tracker.\n   *\n   * @param tracker - The widget tracker whose widgets will be restored.\n   *\n   * @param options - The restoration options.\n   */\n  restore<T extends Widget>(\n    tracker: WidgetTracker<T>,\n    options: IRestorer.IOptions<T>\n  ): Promise<any>;\n}\n\n/**\n * The data connector key for restorer data.\n */\nconst KEY = 'layout-restorer:data';\n\n/**\n * The default implementation of a layout restorer.\n *\n * #### Notes\n * The lifecycle for state restoration is subtle. The sequence of events is:\n *\n * 1. The layout restorer plugin is instantiated and makes a `fetch` call to\n *    the data connector that stores the layout restoration data. The `fetch`\n *    call returns a promise that resolves in step 6, below.\n *\n * 2. Other plugins that care about state restoration require the layout\n *    restorer as a dependency.\n *\n * 3. As each load-time plugin initializes (which happens before the front-end\n *    application has `started`), it instructs the layout restorer whether\n *    the restorer ought to `restore` its widgets by passing in its widget\n *    tracker.\n *    Alternatively, a plugin that does not require its own widget tracker\n *    (because perhaps it only creates a single widget, like a command palette),\n *    can simply `add` its widget along with a persistent unique name to the\n *    layout restorer so that its layout state can be restored when the lab\n *    application restores.\n *\n * 4. After all the load-time plugins have finished initializing, the front-end\n *    application `started` promise will resolve. This is the `first`\n *    promise that the layout restorer waits for. By this point, all of the\n *    plugins that care about restoration will have instructed the layout\n *    restorer to `restore` their widget trackers.\n *\n * 5. The layout restorer will then instruct each plugin's widget tracker\n *    to restore its state and reinstantiate whichever widgets it wants. The\n *    tracker returns a promise to the layout restorer that resolves when it\n *    has completed restoring the tracked widgets it cares about.\n *\n * 6. As each widget tracker finishes restoring the widget instances it cares\n *    about, it resolves the promise that was returned to the layout restorer\n *    (in step 5). After all of the promises that the restorer is awaiting have\n *    settled, the restorer then resolves the outstanding `fetch` promise\n *    (from step 1) and hands off a layout state object to the application\n *    shell's `restoreLayout` method for restoration.\n *\n * 7. Once the application shell has finished restoring the layout, the\n *    JupyterLab application's `restored` promise is resolved.\n *\n * Of particular note are steps 5 and 6: since data restoration of plugins\n * is accomplished by executing commands, the command that is used to restore\n * the data of each plugin must return a promise that only resolves when the\n * widget has been created and added to the plugin's widget tracker.\n */\nexport class LayoutRestorer implements ILayoutRestorer {\n  /**\n   * Create a layout restorer.\n   */\n  constructor(options: LayoutRestorer.IOptions) {\n    this._connector = options.connector;\n    this._first = options.first;\n    this._registry = options.registry;\n    if (options.mode) {\n      this._mode = options.mode;\n    }\n\n    void this._first\n      .then(() => {\n        this._firstDone = true;\n      })\n      .then(() => Promise.all(this._promises))\n      .then(() => {\n        this._promisesDone = true;\n\n        // Release the tracker set.\n        this._trackers.clear();\n      })\n      .then(() => {\n        this._restored.resolve(void 0);\n      });\n  }\n\n  /**\n   * Whether full layout restoration is deferred and is currently incomplete.\n   *\n   * #### Notes\n   * This flag is useful for tracking when the application has started in\n   * 'single-document' mode and the main area has not yet been restored.\n   */\n  get isDeferred(): boolean {\n    return this._deferred.length > 0;\n  }\n\n  /**\n   * A promise resolved when the layout restorer is ready to receive signals.\n   */\n  get restored(): Promise<void> {\n    return this._restored.promise;\n  }\n\n  /**\n   * Add a widget to be tracked by the layout restorer.\n   */\n  add(widget: Widget, name: string): void {\n    Private.nameProperty.set(widget, name);\n    this._widgets.set(name, widget);\n    widget.disposed.connect(this._onWidgetDisposed, this);\n  }\n\n  /**\n   * Fetch the layout state for the application.\n   *\n   * #### Notes\n   * Fetching the layout relies on all widget restoration to be complete, so\n   * calls to `fetch` are guaranteed to return after restoration is complete.\n   */\n  async fetch(): Promise<ILabShell.ILayout> {\n    const blank: ILabShell.ILayout = {\n      fresh: true,\n      mainArea: null,\n      downArea: null,\n      leftArea: null,\n      rightArea: null,\n      topArea: null,\n      relativeSizes: null\n    };\n    const layout = this._connector.fetch(KEY);\n\n    try {\n      const [data] = await Promise.all([layout, this.restored]);\n      if (!data) {\n        return blank;\n      }\n\n      const { main, down, left, right, relativeSizes, top } =\n        data as Private.ILayout;\n\n      // If any data exists, then this is not a fresh session.\n      const fresh = false;\n\n      // Rehydrate main area.\n      let mainArea: ILabShell.IMainArea | null = null;\n      if (this._mode === 'multiple-document') {\n        mainArea = this._rehydrateMainArea(main);\n      } else {\n        this._deferredMainArea = main;\n      }\n\n      // Rehydrate down area.\n      const downArea = this._rehydrateDownArea(down);\n\n      // Rehydrate left area.\n      const leftArea = this._rehydrateSideArea(left);\n\n      // Rehydrate right area.\n      const rightArea = this._rehydrateSideArea(right);\n\n      return {\n        fresh,\n        mainArea,\n        downArea,\n        leftArea,\n        rightArea,\n        relativeSizes: relativeSizes || null,\n        topArea: (top as any) ?? null\n      };\n    } catch (error) {\n      return blank;\n    }\n  }\n\n  /**\n   * Restore the widgets of a particular widget tracker.\n   *\n   * @param tracker - The widget tracker whose widgets will be restored.\n   *\n   * @param options - The restoration options.\n   */\n  async restore(\n    tracker: WidgetTracker,\n    options: IRestorer.IOptions<Widget>\n  ): Promise<any> {\n    if (this._firstDone) {\n      throw new Error('restore() must be called before `first` has resolved.');\n    }\n\n    const { namespace } = tracker;\n    if (this._trackers.has(namespace)) {\n      throw new Error(`The tracker \"${namespace}\" is already restored.`);\n    }\n\n    const { args, command, name, when } = options;\n\n    // Add the tracker to the private trackers collection.\n    this._trackers.add(namespace);\n\n    // Whenever a new widget is added to the tracker, record its name.\n    tracker.widgetAdded.connect((_, widget) => {\n      const widgetName = name(widget);\n      if (widgetName) {\n        this.add(widget, `${namespace}:${widgetName}`);\n      }\n    }, this);\n\n    // Whenever a widget is updated, get its new name.\n    tracker.widgetUpdated.connect((_, widget) => {\n      const widgetName = name(widget);\n      if (widgetName) {\n        const name = `${namespace}:${widgetName}`;\n        Private.nameProperty.set(widget, name);\n        this._widgets.set(name, widget);\n      }\n    });\n\n    const first = this._first;\n    if (this._mode == 'multiple-document') {\n      const promise = tracker\n        .restore({\n          args: args || (() => JSONExt.emptyObject),\n          command,\n          connector: this._connector,\n          name,\n          registry: this._registry,\n          when: when ? [first].concat(when) : first\n        })\n        .catch(error => {\n          console.error(error);\n        });\n\n      this._promises.push(promise);\n\n      return promise;\n    }\n\n    tracker.defer({\n      args: args || (() => JSONExt.emptyObject),\n      command,\n      connector: this._connector,\n      name,\n      registry: this._registry,\n      when: when ? [first].concat(when) : first\n    });\n    this._deferred.push(tracker);\n  }\n\n  /**\n   * Restore the application layout if its restoration has been deferred.\n   *\n   * @returns - the rehydrated main area.\n   */\n  async restoreDeferred(): Promise<ILabShell.IMainArea | null> {\n    if (!this.isDeferred) {\n      return null;\n    }\n\n    // Empty the deferred list and wait for all trackers to restore.\n    const wait = Promise.resolve();\n    const promises = this._deferred.map(t => wait.then(() => t.restore()));\n    this._deferred.length = 0;\n    await Promise.all(promises);\n\n    // Rehydrate the main area layout.\n    return this._rehydrateMainArea(this._deferredMainArea);\n  }\n\n  /**\n   * Save the layout state for the application.\n   */\n  save(layout: ILabShell.ILayout): Promise<void> {\n    // If there are promises that are unresolved, bail.\n    if (!this._promisesDone) {\n      const warning = 'save() was called prematurely.';\n      console.warn(warning);\n      return Promise.reject(warning);\n    }\n\n    const dehydrated: Private.ILayout = {};\n\n    // Save the cached main area layout if restoration is deferred.\n    dehydrated.main = this.isDeferred\n      ? this._deferredMainArea\n      : this._dehydrateMainArea(layout.mainArea);\n\n    // Update only the current widget in the db when restoration is deferred.\n    // Useful for providing the tab title in doc mode.\n    if (this.isDeferred) {\n      const currentWidget = layout.mainArea?.currentWidget;\n      if (currentWidget) {\n        const widgetName = Private.nameProperty.get(currentWidget);\n        dehydrated.main = {\n          ...dehydrated.main,\n          current: widgetName || undefined\n        };\n      }\n    }\n    dehydrated.down = this._dehydrateDownArea(layout.downArea);\n    dehydrated.left = this._dehydrateSideArea(layout.leftArea);\n    dehydrated.right = this._dehydrateSideArea(layout.rightArea);\n    dehydrated.relativeSizes = layout.relativeSizes;\n    dehydrated.top = { ...layout.topArea };\n\n    return this._connector.save(KEY, dehydrated);\n  }\n\n  /**\n   * Dehydrate a main area description into a serializable object.\n   */\n  private _dehydrateMainArea(\n    area: ILabShell.IMainArea | null\n  ): Private.IMainArea | null {\n    if (!area) {\n      return null;\n    }\n    return Private.serializeMain(area);\n  }\n\n  /**\n   * Rehydrate a serialized main area description object.\n   *\n   * #### Notes\n   * This function consumes data that can become corrupted, so it uses type\n   * coercion to guarantee the dehydrated object is safely processed.\n   */\n  private _rehydrateMainArea(\n    area?: Private.IMainArea | null\n  ): ILabShell.IMainArea | null {\n    if (!area) {\n      return null;\n    }\n    return Private.deserializeMain(area, this._widgets);\n  }\n\n  /**\n   * Dehydrate a down area description into a serializable object.\n   */\n  private _dehydrateDownArea(\n    area: ILabShell.IDownArea | null\n  ): Private.IDownArea | null {\n    if (!area) {\n      return null;\n    }\n\n    const dehydrated: Private.IDownArea = {\n      size: area.size\n    };\n\n    if (area.currentWidget) {\n      const current = Private.nameProperty.get(area.currentWidget);\n      if (current) {\n        dehydrated.current = current;\n      }\n    }\n\n    if (area.widgets) {\n      dehydrated.widgets = area.widgets\n        .map(widget => Private.nameProperty.get(widget))\n        .filter(name => !!name);\n    }\n\n    return dehydrated;\n  }\n\n  /**\n   * Rehydrate a serialized side area description object.\n   *\n   * #### Notes\n   * This function consumes data that can become corrupted, so it uses type\n   * coercion to guarantee the dehydrated object is safely processed.\n   */\n  private _rehydrateDownArea(\n    area?: Private.IDownArea | null\n  ): ILabShell.IDownArea | null {\n    if (!area) {\n      return { currentWidget: null, size: 0.0, widgets: null };\n    }\n\n    const internal = this._widgets;\n    const currentWidget =\n      area.current && internal.has(`${area.current}`)\n        ? internal.get(`${area.current}`)\n        : null;\n    const widgets = !Array.isArray(area.widgets)\n      ? null\n      : area.widgets\n          .map(name =>\n            internal.has(`${name}`) ? internal.get(`${name}`) : null\n          )\n          .filter(widget => !!widget);\n    return {\n      currentWidget: currentWidget!,\n      size: area.size ?? 0.0,\n      widgets: widgets as Widget[] | null\n    };\n  }\n\n  /**\n   * Dehydrate a side area description into a serializable object.\n   */\n  private _dehydrateSideArea(\n    area?: ILabShell.ISideArea | null\n  ): Private.ISideArea | null {\n    if (!area) {\n      return null;\n    }\n    const dehydrated: Private.ISideArea = {\n      collapsed: area.collapsed,\n      visible: area.visible\n    };\n    if (area.currentWidget) {\n      const current = Private.nameProperty.get(area.currentWidget);\n      if (current) {\n        dehydrated.current = current;\n      }\n    }\n    if (area.widgets) {\n      dehydrated.widgets = area.widgets\n        .map(widget => Private.nameProperty.get(widget))\n        .filter(name => !!name);\n    }\n    if (area.widgetStates) {\n      dehydrated.widgetStates = area.widgetStates as {\n        [id: string]: {\n          sizes: number[] | null;\n          expansionStates: boolean[] | null;\n        };\n      };\n    }\n    return dehydrated;\n  }\n\n  /**\n   * Rehydrate a serialized side area description object.\n   *\n   * #### Notes\n   * This function consumes data that can become corrupted, so it uses type\n   * coercion to guarantee the dehydrated object is safely processed.\n   */\n  private _rehydrateSideArea(\n    area?: Private.ISideArea | null\n  ): ILabShell.ISideArea {\n    if (!area) {\n      return {\n        collapsed: true,\n        currentWidget: null,\n        visible: true,\n        widgets: null,\n        widgetStates: {\n          ['null']: {\n            sizes: null,\n            expansionStates: null\n          }\n        }\n      };\n    }\n    const internal = this._widgets;\n    const collapsed = area.collapsed ?? false;\n    const currentWidget =\n      area.current && internal.has(`${area.current}`)\n        ? internal.get(`${area.current}`)\n        : null;\n    const widgets = !Array.isArray(area.widgets)\n      ? null\n      : area.widgets\n          .map(name =>\n            internal.has(`${name}`) ? internal.get(`${name}`) : null\n          )\n          .filter(widget => !!widget);\n    const widgetStates = area.widgetStates as {\n      [id: string]: {\n        sizes: number[] | null;\n        expansionStates: boolean[] | null;\n      };\n    };\n    return {\n      collapsed,\n      currentWidget: currentWidget!,\n      widgets: widgets as Widget[] | null,\n      visible: area.visible ?? true,\n      widgetStates: widgetStates\n    };\n  }\n\n  /**\n   * Handle a widget disposal.\n   */\n  private _onWidgetDisposed(widget: Widget): void {\n    const name = Private.nameProperty.get(widget);\n    this._widgets.delete(name);\n  }\n\n  private _connector: IDataConnector<ReadonlyPartialJSONValue>;\n  private _deferred = new Array<WidgetTracker>();\n  private _deferredMainArea?: Private.IMainArea | null = null;\n  private _first: Promise<any>;\n  private _firstDone = false;\n  private _promisesDone = false;\n  private _promises: Promise<any>[] = [];\n  private _restored = new PromiseDelegate<void>();\n  private _registry: CommandRegistry;\n  private _trackers = new Set<string>();\n  private _widgets = new Map<string, Widget>();\n  private _mode: DockPanel.Mode = 'multiple-document';\n}\n\n/**\n * A namespace for `LayoutRestorer` statics.\n */\nexport namespace LayoutRestorer {\n  /**\n   * The configuration options for layout restorer instantiation.\n   */\n  export interface IOptions {\n    /**\n     * The data connector used for layout saving and fetching.\n     */\n    connector: IDataConnector<ReadonlyPartialJSONValue>;\n\n    /**\n     * The initial promise that has to be resolved before restoration.\n     *\n     * #### Notes\n     * This promise should equal the JupyterLab application `started` notifier.\n     */\n    first: Promise<any>;\n\n    /**\n     * The application command registry.\n     */\n    registry: CommandRegistry;\n\n    /**\n     * The DockPanel mode.\n     */\n    mode?: DockPanel.Mode;\n  }\n}\n\n/*\n * A namespace for private data.\n */\nnamespace Private {\n  /**\n   * The dehydrated state of the application layout.\n   *\n   * #### Notes\n   * This format is JSON serializable and saved with the data connector.\n   * It is meant to be a data structure can translate into a `LabShell.ILayout`\n   * data structure for consumption by the application shell.\n   */\n  export interface ILayout extends PartialJSONObject {\n    /**\n     * The main area of the user interface.\n     */\n    main?: IMainArea | null;\n\n    /**\n     * The down area of the user interface\n     */\n    down?: IDownArea | null;\n\n    /**\n     * The left area of the user interface.\n     */\n    left?: ISideArea | null;\n\n    /**\n     * The right area of the user interface.\n     */\n    right?: ISideArea | null;\n\n    /**\n     * The relatives sizes of the areas of the user interface.\n     */\n    relativeSizes?: number[] | null;\n\n    /**\n     * The restorable description of the top area in the user interface.\n     */\n    top?: ITopArea | null;\n  }\n\n  /**\n   * The restorable description of the main application area.\n   */\n  export interface IMainArea extends PartialJSONObject {\n    /**\n     * The current widget that has application focus.\n     */\n    current?: string | null;\n\n    /**\n     * The main application dock panel.\n     */\n    dock?: ISplitArea | ITabArea | null;\n\n    /**\n     * The document mode (i.e., multiple/single) of the main dock panel.\n     */\n    mode?: DockPanel.Mode | null;\n  }\n\n  /**\n   * The restorable description of a sidebar in the user interface.\n   */\n  export interface ISideArea extends PartialJSONObject {\n    /**\n     * A flag denoting whether the sidebar has been collapsed.\n     */\n    collapsed?: boolean | null;\n\n    /**\n     * The current widget that has side area focus.\n     */\n    current?: string | null;\n\n    /**\n     * A flag denoting whether the side tab bar is visible.\n     */\n    visible?: boolean | null;\n\n    /**\n     * The collection of widgets held by the sidebar.\n     */\n    widgets?: Array<string> | null;\n  }\n\n  /**\n   * The restorable description of a tab area in the user interface.\n   */\n  export interface ITabArea extends JSONObject {\n    /**\n     * The type indicator of the serialized tab area.\n     */\n    type: 'tab-area';\n\n    /**\n     * The widgets in the tab area.\n     */\n    widgets: Array<string> | null;\n\n    /**\n     * The index of the selected tab.\n     */\n    currentIndex: number;\n  }\n\n  /**\n   * The restorable description of the top area in the user interface.\n   */\n  export interface ITopArea extends PartialJSONObject {\n    /**\n     * Top area visibility in simple mode.\n     */\n    readonly simpleVisibility?: boolean;\n  }\n\n  /**\n   * The restorable description of a split area in the user interface.\n   */\n  export interface ISplitArea extends JSONObject {\n    /**\n     * The type indicator of the serialized split area.\n     */\n    type: 'split-area';\n\n    /**\n     * The orientation of the split area.\n     */\n    orientation: 'horizontal' | 'vertical';\n\n    /**\n     * The children in the split area.\n     */\n    children: Array<ITabArea | ISplitArea> | null;\n\n    /**\n     * The sizes of the children.\n     */\n    sizes: Array<number>;\n  }\n\n  /**\n   * The restorable description of the down area in the user interface\n   */\n  export interface IDownArea extends PartialJSONObject {\n    /**\n     * The current widget that has application focus.\n     */\n    current?: string | null;\n\n    /**\n     * Vertical relative size of the down area\n     *\n     * The main area will take the rest of the height\n     */\n    size?: number | null;\n\n    /**\n     * The widgets in the down area.\n     */\n    widgets?: Array<string> | null;\n  }\n\n  /**\n   * An attached property for a widget's ID in the serialized restore data.\n   */\n  export const nameProperty = new AttachedProperty<Widget, string>({\n    name: 'name',\n    create: owner => ''\n  });\n\n  /**\n   * Serialize individual areas within the main area.\n   */\n  function serializeArea(\n    area: ILabShell.AreaConfig | null\n  ): ITabArea | ISplitArea | null {\n    if (!area || !area.type) {\n      return null;\n    }\n\n    if (area.type === 'tab-area') {\n      return {\n        type: 'tab-area',\n        currentIndex: area.currentIndex,\n        widgets: area.widgets\n          .map(widget => nameProperty.get(widget))\n          .filter(name => !!name)\n      };\n    }\n\n    return {\n      type: 'split-area',\n      orientation: area.orientation,\n      sizes: area.sizes,\n      children: area.children\n        .map(serializeArea)\n        .filter(area => !!area) as Array<ITabArea | ISplitArea>\n    };\n  }\n\n  /**\n   * Return a dehydrated, serializable version of the main dock panel.\n   */\n  export function serializeMain(area: ILabShell.IMainArea): IMainArea {\n    const dehydrated: IMainArea = {\n      dock: (area && area.dock && serializeArea(area.dock.main)) || null\n    };\n    if (area) {\n      if (area.currentWidget) {\n        const current = Private.nameProperty.get(area.currentWidget);\n        if (current) {\n          dehydrated.current = current;\n        }\n      }\n    }\n    return dehydrated;\n  }\n\n  /**\n   * Deserialize individual areas within the main area.\n   *\n   * #### Notes\n   * Because this data comes from a potentially unreliable foreign source, it is\n   * typed as a `JSONObject`; but the actual expected type is:\n   * `ITabArea | ISplitArea`.\n   *\n   * For fault tolerance, types are manually checked in deserialization.\n   */\n  function deserializeArea(\n    area: JSONObject,\n    names: Map<string, Widget>\n  ): ILabShell.AreaConfig | null {\n    if (!area) {\n      return null;\n    }\n\n    // Because this data is saved to a foreign data source, its type safety is\n    // not guaranteed when it is retrieved, so exhaustive checks are necessary.\n    const type = ((area as any).type as string) || 'unknown';\n    if (type === 'unknown' || (type !== 'tab-area' && type !== 'split-area')) {\n      console.warn(`Attempted to deserialize unknown type: ${type}`);\n      return null;\n    }\n\n    if (type === 'tab-area') {\n      const { currentIndex, widgets } = area as ITabArea;\n      const hydrated: ILabShell.AreaConfig = {\n        type: 'tab-area',\n        currentIndex: currentIndex || 0,\n        widgets:\n          (widgets &&\n            (widgets\n              .map(widget => names.get(widget))\n              .filter(widget => !!widget) as Widget[])) ||\n          []\n      };\n\n      // Make sure the current index is within bounds.\n      if (hydrated.currentIndex > hydrated.widgets.length - 1) {\n        hydrated.currentIndex = 0;\n      }\n\n      return hydrated;\n    }\n\n    const { orientation, sizes, children } = area as ISplitArea;\n    const hydrated: ILabShell.AreaConfig = {\n      type: 'split-area',\n      orientation: orientation,\n      sizes: sizes || [],\n      children:\n        (children &&\n          (children\n            .map(child => deserializeArea(child, names))\n            .filter(widget => !!widget) as ILabShell.AreaConfig[])) ||\n        []\n    };\n\n    return hydrated;\n  }\n\n  /**\n   * Return the hydrated version of the main dock panel, ready to restore.\n   *\n   * #### Notes\n   * Because this data comes from a potentially unreliable foreign source, it is\n   * typed as a `JSONObject`; but the actual expected type is: `IMainArea`.\n   *\n   * For fault tolerance, types are manually checked in deserialization.\n   */\n  export function deserializeMain(\n    area: ReadonlyPartialJSONObject,\n    names: Map<string, Widget>\n  ): ILabShell.IMainArea | null {\n    if (!area) {\n      return null;\n    }\n\n    const name = (area as any).current || null;\n    const dock = (area as any).dock || null;\n\n    return {\n      currentWidget: (name && names.has(name) && names.get(name)) || null,\n      dock: dock ? { main: deserializeArea(dock, names) } : null\n    };\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { IWidgetTracker, WidgetTracker } from '@jupyterlab/apputils';\nimport {\n  DocumentRegistry,\n  MimeDocument,\n  MimeDocumentFactory\n} from '@jupyterlab/docregistry';\nimport { IRenderMimeRegistry } from '@jupyterlab/rendermime';\nimport { IRenderMime } from '@jupyterlab/rendermime-interfaces';\nimport { ITranslator } from '@jupyterlab/translation';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport { Token } from '@lumino/coreutils';\nimport { AttachedProperty } from '@lumino/properties';\nimport { JupyterFrontEnd, JupyterFrontEndPlugin } from './index';\nimport { ILayoutRestorer } from './layoutrestorer';\n\n/**\n * A class that tracks mime documents.\n */\nexport interface IMimeDocumentTracker extends IWidgetTracker<MimeDocument> {}\n\n/**\n * The mime document tracker token.\n */\nexport const IMimeDocumentTracker = new Token<IMimeDocumentTracker>(\n  '@jupyterlab/application:IMimeDocumentTracker',\n  'A widget tracker for documents rendered using a mime renderer extension. Use this if you want to list and interact with documents rendered by such extensions.'\n);\n\n/**\n * Create rendermime plugins for rendermime extension modules.\n */\nexport function createRendermimePlugins(\n  extensions: IRenderMime.IExtensionModule[]\n): JupyterFrontEndPlugin<void | IMimeDocumentTracker, any, any>[] {\n  const plugins: JupyterFrontEndPlugin<void | IMimeDocumentTracker>[] = [];\n\n  const namespace = 'application-mimedocuments';\n  const tracker = new WidgetTracker<MimeDocument>({ namespace });\n\n  extensions.forEach(mod => {\n    let data = mod.default;\n\n    // Handle CommonJS exports.\n    if (!mod.hasOwnProperty('__esModule')) {\n      data = mod as any;\n    }\n    if (!Array.isArray(data)) {\n      data = [data] as ReadonlyArray<IRenderMime.IExtension>;\n    }\n    (data as ReadonlyArray<IRenderMime.IExtension>).forEach(item => {\n      plugins.push(createRendermimePlugin(tracker, item));\n    });\n  });\n\n  // Also add a meta-plugin handling state restoration\n  // and exposing the mime document widget tracker.\n  plugins.push({\n    id: '@jupyterlab/application-extension:mimedocument',\n    description: 'Provides a mime document widget tracker.',\n    optional: [ILayoutRestorer],\n    provides: IMimeDocumentTracker,\n    autoStart: true,\n    activate: (app: JupyterFrontEnd, restorer: ILayoutRestorer | null) => {\n      if (restorer) {\n        void restorer.restore(tracker, {\n          command: 'docmanager:open',\n          args: widget => ({\n            path: widget.context.path,\n            factory: Private.factoryNameProperty.get(widget)\n          }),\n          name: widget =>\n            `${widget.context.path}:${Private.factoryNameProperty.get(widget)}`\n        });\n      }\n      return tracker;\n    }\n  });\n\n  return plugins;\n}\n\n/**\n * Create rendermime plugins for rendermime extension modules.\n */\nexport function createRendermimePlugin(\n  tracker: WidgetTracker<MimeDocument>,\n  item: IRenderMime.IExtension\n): JupyterFrontEndPlugin<void> {\n  return {\n    id: item.id,\n    description: item.description,\n    requires: [IRenderMimeRegistry, ITranslator],\n    autoStart: true,\n    activate: (\n      app: JupyterFrontEnd,\n      rendermime: IRenderMimeRegistry,\n      translator: ITranslator\n    ) => {\n      // Add the mime renderer.\n      if (item.rank !== undefined) {\n        rendermime.addFactory(item.rendererFactory, item.rank);\n      } else {\n        rendermime.addFactory(item.rendererFactory);\n      }\n\n      // Handle the widget factory.\n      if (!item.documentWidgetFactoryOptions) {\n        return;\n      }\n\n      const registry = app.docRegistry;\n      let options: IRenderMime.IDocumentWidgetFactoryOptions[] = [];\n      if (Array.isArray(item.documentWidgetFactoryOptions)) {\n        options = item.documentWidgetFactoryOptions;\n      } else {\n        options = [\n          item.documentWidgetFactoryOptions as IRenderMime.IDocumentWidgetFactoryOptions\n        ];\n      }\n\n      if (item.fileTypes) {\n        item.fileTypes.forEach(ft => {\n          if (ft.icon) {\n            // upconvert the contents of the icon field to a proper LabIcon\n            ft = { ...ft, icon: LabIcon.resolve({ icon: ft.icon }) };\n          }\n\n          app.docRegistry.addFileType(ft as DocumentRegistry.IFileType);\n        });\n      }\n\n      options.forEach(option => {\n        const toolbarFactory = option.toolbarFactory\n          ? (w: MimeDocument) => option.toolbarFactory!(w.content.renderer)\n          : undefined;\n        const factory = new MimeDocumentFactory({\n          renderTimeout: item.renderTimeout,\n          dataType: item.dataType,\n          rendermime,\n          modelName: option.modelName,\n          name: option.name,\n          primaryFileType: registry.getFileType(option.primaryFileType),\n          fileTypes: option.fileTypes,\n          defaultFor: option.defaultFor,\n          defaultRendered: option.defaultRendered,\n          toolbarFactory,\n          translator,\n          factory: item.rendererFactory\n        });\n        registry.addWidgetFactory(factory);\n\n        factory.widgetCreated.connect((sender, widget) => {\n          Private.factoryNameProperty.set(widget, factory.name);\n          // Notify the widget tracker if restore data needs to update.\n          widget.context.pathChanged.connect(() => {\n            void tracker.save(widget);\n          });\n          void tracker.add(widget);\n        });\n      });\n    }\n  };\n}\n\n/**\n * Private namespace for the module.\n */\nnamespace Private {\n  /**\n   * An attached property for keeping the factory name\n   * that was used to create a mimedocument.\n   */\n  export const factoryNameProperty = new AttachedProperty<\n    MimeDocument,\n    string | undefined\n  >({\n    name: 'factoryName',\n    create: () => undefined\n  });\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { DisposableDelegate, IDisposable } from '@lumino/disposable';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { JupyterFrontEnd } from './frontend';\nimport { ILabStatus } from './tokens';\n\n/**\n * The application status signals and flags class.\n */\nexport class LabStatus implements ILabStatus {\n  /**\n   * Construct a new  status object.\n   */\n  constructor(app: JupyterFrontEnd<any, any>) {\n    this._busySignal = new Signal(app);\n    this._dirtySignal = new Signal(app);\n  }\n\n  /**\n   * Returns a signal for when application changes its busy status.\n   */\n  get busySignal(): ISignal<JupyterFrontEnd, boolean> {\n    return this._busySignal;\n  }\n\n  /**\n   * Returns a signal for when application changes its dirty status.\n   */\n  get dirtySignal(): ISignal<JupyterFrontEnd, boolean> {\n    return this._dirtySignal;\n  }\n\n  /**\n   * Whether the application is busy.\n   */\n  get isBusy(): boolean {\n    return this._busyCount > 0;\n  }\n\n  /**\n   * Whether the application is dirty.\n   */\n  get isDirty(): boolean {\n    return this._dirtyCount > 0;\n  }\n\n  /**\n   * Set the application state to dirty.\n   *\n   * @returns A disposable used to clear the dirty state for the caller.\n   */\n  setDirty(): IDisposable {\n    const oldDirty = this.isDirty;\n    this._dirtyCount++;\n    if (this.isDirty !== oldDirty) {\n      this._dirtySignal.emit(this.isDirty);\n    }\n    return new DisposableDelegate(() => {\n      const oldDirty = this.isDirty;\n      this._dirtyCount = Math.max(0, this._dirtyCount - 1);\n      if (this.isDirty !== oldDirty) {\n        this._dirtySignal.emit(this.isDirty);\n      }\n    });\n  }\n\n  /**\n   * Set the application state to busy.\n   *\n   * @returns A disposable used to clear the busy state for the caller.\n   */\n  setBusy(): IDisposable {\n    const oldBusy = this.isBusy;\n    this._busyCount++;\n    if (this.isBusy !== oldBusy) {\n      this._busySignal.emit(this.isBusy);\n    }\n    return new DisposableDelegate(() => {\n      const oldBusy = this.isBusy;\n      this._busyCount--;\n      if (this.isBusy !== oldBusy) {\n        this._busySignal.emit(this.isBusy);\n      }\n    });\n  }\n\n  private _busyCount = 0;\n  private _busySignal: Signal<JupyterFrontEnd, boolean>;\n  private _dirtyCount = 0;\n  private _dirtySignal: Signal<JupyterFrontEnd, boolean>;\n}\n"],"names":[],"sourceRoot":""}